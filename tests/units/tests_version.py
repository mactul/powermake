import powermake.package
import powermake.version_parser

def run_tests():
    assert(powermake.version_parser.parse_version("v3!2.1.0-a12") > powermake.version_parser.parse_version("v0:2.1.0-a12"))
    assert(powermake.version_parser.parse_version("v2.1.0-a12") == powermake.version_parser.parse_version("v1:2.1.0-a12"))
    assert(powermake.version_parser.parse_version("v3!2.1.0-a12") == powermake.version_parser.parse_version("v3:2.1.0-a12"))
    assert(powermake.version_parser.parse_version("v3-2.1.0-a12") == powermake.version_parser.parse_version("v3:2.1.0-a12"))
    assert(powermake.version_parser.parse_version("v2.1.0") > powermake.version_parser.parse_version("v1:2.1.0-a12"))
    assert(powermake.version_parser.parse_version("v2.1.0-post1") > powermake.version_parser.parse_version("v1:2.1.0"))
    assert(powermake.version_parser.parse_version("v3_2.1.0_12") == powermake.version_parser.parse_version("v3!2.1.0-post-12"))
    assert(powermake.version_parser.parse_version("v3!2.1.0:12") == powermake.version_parser.parse_version("v3:2.1.0-post12"))
    assert(powermake.version_parser.parse_version("v3_2.1.0:a34:12") == powermake.version_parser.parse_version("v3!2.1.0alpha34p12"))
    assert(powermake.version_parser.parse_version("v3_2.1.0:b34_12:d3") == powermake.version_parser.parse_version("v3!2.1.0beta34p12dev3"))
    assert(powermake.version_parser.parse_version("v3_2.1.0:a34:12_d3") == powermake.version_parser.parse_version("v3!2.1.0alpha34p12dev3"))
    assert(powermake.version_parser.parse_version("v3_2.1.0:b34:12_d3") == powermake.version_parser.Version(epoch="3", release=("2", "1", "0"), pre_type=powermake.version_parser.PreType.BETA, pre_number='34', post_number=12, dev_number=3))
    assert(powermake.version_parser.parse_version("2.0.22-RC1") == powermake.version_parser.Version(epoch="1", release=("2", "0", "22"), pre_type=powermake.version_parser.PreType.RELEASE_CANDIDATE, pre_number='1'))
    assert(powermake.version_parser.parse_version("preview-2.0.22") == powermake.version_parser.Version(epoch="1", release=("2", "0", "22"), pre_type=powermake.version_parser.PreType.ALPHA, pre_number='1'))
    assert(powermake.version_parser.parse_version("pre-2.0.22") == powermake.version_parser.Version(epoch="1", release=("2", "0", "22"), pre_type=powermake.version_parser.PreType.ALPHA, pre_number='1'))
    assert(powermake.version_parser.parse_version("pre2.0.22") == powermake.version_parser.Version(epoch="1", release=("2", "0", "22"), pre_type=powermake.version_parser.PreType.ALPHA, pre_number='1'))
    assert(powermake.version_parser.parse_version("prerelease-2.0.22") == powermake.version_parser.Version(epoch="1", release=("2", "0", "22"), pre_type=powermake.version_parser.PreType.BETA, pre_number='1'))
    assert(powermake.version_parser.parse_version("candidate-2.0.22") == powermake.version_parser.Version(epoch="1", release=("2", "0", "22"), pre_type=powermake.version_parser.PreType.RELEASE_CANDIDATE, pre_number='1'))
    assert(powermake.version_parser.parse_version("v_2.3.4") == powermake.version_parser.Version(epoch="1", release=("2", "3", "4")))
    assert(powermake.version_parser.parse_version("v3_2.1.0:rc3dev2") == powermake.version_parser.parse_version("v3!2.1.0-rc_3-develop_2"))
    assert(powermake.version_parser.parse_version("rhjtrhjerh") is None)
    assert(powermake.version_parser.parse_version("rhjtr3.2.45hjerh") is None)
    assert(powermake.version_parser.parse_version("3.2.45hjerh") is None)
    assert(powermake.version_parser.parse_version("rhjtr3.2.45") is None)

    assert(powermake.package.parse_version("0_9_8") == powermake.version_parser.parse_version("0.9.8"))
    assert(powermake.package.parse_version("0-9-8") == powermake.version_parser.parse_version("0.9.8"))
    assert(powermake.package.parse_version("0_9_8-7") == powermake.version_parser.parse_version("0.9.8-7"))
    assert(powermake.package.parse_version("0-9-8_7") == powermake.version_parser.parse_version("0.9.8-7"))

    assert(powermake.version_parser.remove_version_frills("15.1.1+r500+gb1b8d8ce3eea-1") == "15.1.1-1")
    assert(powermake.version_parser.remove_version_frills("v15.1.1+alpha1+gb1b8d8ce3eea-1") == "v15.1.1+alpha1-1")
    assert(powermake.version_parser.remove_version_frills("v_15.1.1alpha17") == "15.1.1alpha17")
    assert(powermake.version_parser.remove_version_frills("v15.1.1alpha17") == "v15.1.1alpha17")
    assert(powermake.version_parser.remove_version_frills("6.15.9.zen1-1") == "6.15.9-1")
    assert(powermake.version_parser.remove_version_frills("6.15.9.hardened1-1") == "6.15.9-1")
    assert(powermake.version_parser.remove_version_frills("release-3.2.20") == "3.2.20")
    assert(powermake.version_parser.remove_version_frills("release-------3.2.20") == "3.2.20")
    assert(powermake.version_parser.remove_version_frills("release-.--7!--+--3.2.20") == "7-3.2.20")
    assert(powermake.version_parser.remove_version_frills("release-v7!3.2.20") == "v7!3.2.20")
    assert(powermake.version_parser.remove_version_frills("7!3.2.20") == "7!3.2.20")
    assert(powermake.version_parser.remove_version_frills("-4") == "4")
    assert(powermake.version_parser.remove_version_frills("-!-:--4") == "4")
    assert(powermake.version_parser.remove_version_frills("7") == "7")
    assert(powermake.version_parser.remove_version_frills("7-junk") == "7")
    assert(powermake.version_parser.remove_version_frills("junk") == "")
    assert(powermake.version_parser.remove_version_frills("") == "")
    assert(powermake.version_parser.remove_version_frills("preview-2.0.22") == "preview-2.0.22")
    assert(powermake.version_parser.remove_version_frills("preview2.0.22") == "preview2.0.22")
    assert(powermake.version_parser.remove_version_frills("prerelease-2.0.22") == "prerelease-2.0.22")
    assert(powermake.version_parser.remove_version_frills("prerelease2.0.22") == "prerelease2.0.22")
    assert(powermake.version_parser.remove_version_frills("candidate-2.0.22") == "candidate-2.0.22")
    assert(powermake.version_parser.remove_version_frills("candidate2.0.22") == "candidate2.0.22")
    assert(powermake.version_parser.remove_version_frills("pre:2.0.22") == "pre:2.0.22")
    assert(powermake.version_parser.remove_version_frills("pre2.0.22") == "pre2.0.22")

